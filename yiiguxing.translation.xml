<application>
  <component name="AppStorage">
    <histories>
      <item value="license" />
      <item value="lisense" />
      <item value="/**&#10; * Beans on which the current bean depends. Any beans specified are guaranteed to be&#10; * created by the container before this bean. Used infrequently in cases where a bean&#10; * does not explicitly depend on another through properties or constructor arguments,&#10; * but rather depends on the side effects of another bean's initialization.&#10; *&#10; * &lt;p&gt;A depends-on declaration can specify both an initialization-time dependency and,&#10; * in the case of singleton beans only, a corresponding destruction-time dependency.&#10; * Dependent beans that define a depends-on relationship with a given bean are destroyed&#10; * first, prior to the given bean itself being destroyed. Thus, a depends-on declaration&#10; * can also control shutdown order.&#10; *&#10; * &lt;p&gt;May be used on any class directly or indirectly annotated with&#10; * {@link org.springframework.stereotype.Component} or on methods annotated&#10; * with {@link Bean}.&#10; *&#10; * &lt;p&gt;Using {@link DependsOn} at the class level has no effect unless component-scanning&#10; * is being used. If a {@link DependsOn}-annotated class is declared via XML,&#10; * {@link DependsOn} annotation metadata is ignored, and&#10; * {@code &lt;bean depends-on=&quot;...&quot;/&gt;} is respected instead.&#10; *&#10; * @author Juergen Hoeller&#10; * @since 3.0&#10; */" />
      <item value="&#9;/**&#10;&#9; * Set the ttl to apply for cache entries. Use {@link Duration#ZERO} to declare an eternal cache.&#10;&#9; *&#10;&#9; * @param ttl must not be {@literal null}.&#10;&#9; * @return new {@link RedisCacheConfiguration}.&#10;&#9; */" />
      <item value="rapid change" />
      <item value="急剧变化" />
      <item value="急剧下降" />
      <item value="sharp" />
      <item value="Sharp" />
      <item value="last term enterprise classification" />
      <item value="last enterprise classification" />
      <item value="上一期" />
      <item value="信用结果下降数" />
      <item value="信用结果上升数" />
      <item value="上升数" />
      <item value="新增数" />
      <item value="本期新增" />
      <item value="本期新增评价数" />
      <item value="period" />
      <item value="本期信用评价总数" />
      <item value="最新评估日期" />
      <item value="receive" />
      <item value="&#9;// Over-riding to make sure this.disableLocalConfigureAuthenticationBldr = false&#10;&#9;&#9;// This will ensure that when this configurer builds the AuthenticationManager it will not attempt&#10;&#9;&#9;// to find another 'Global' AuthenticationManager in the ApplicationContext (if available),&#10;&#9;&#9;// and set that as the parent of this 'Local' AuthenticationManager.&#10;&#9;&#9;// This AuthenticationManager should only be wired up with an AuthenticationProvider&#10;&#9;&#9;// composed of the ClientDetailsService (wired in this configuration) for authenticating 'clients' only." />
      <item value="com.itextpdf.io.IOException: Type of font is not recognized." />
      <item value="org.w3c.dom.DOMException: NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist.&#10;&#9;at org.apache.xerces.dom.ElementImpl.setIdAttributeNS(Unknown Source) ~[xercesImpl-2.11.0.jar:na]" />
      <item value="&#10;/**&#10; * Main entry point of font selector logic.&#10; * Contains reusable {@link FontSet} and collection of {@link PdfFont}s.&#10; * FontProvider depends on {@link PdfDocument} due to {@link PdfFont}, so it cannot be reused for different documents&#10; * unless reset with {@link FontProvider#reset()} or recreated with {@link FontProvider#getFontSet()}.&#10; * In the former case the {@link FontSelectorCache} is reused and in the latter it's reinitialised.&#10; * FontProvider the only end point for creating {@link PdfFont}.&#10; * &lt;p&gt;&#10; * It is allowed to use only one {@link FontProvider} per document. If temporary fonts per element needed,&#10; * additional {@link FontSet} can be used. For more details see {@link com.itextpdf.layout.property.Property#FONT_SET},&#10; * {@link #getPdfFont(FontInfo, FontSet)}, {@link #getStrategy(String, List, FontCharacteristics, FontSet)}.&#10; * &lt;p&gt;&#10; * Note, FontProvider does not close created {@link FontProgram}s, because of possible conflicts with {@link FontCache}.&#10; */" />
      <item value="ERROR:  'NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist.'&#10;" />
      <item value="org.w3c.dom.DOMException: NOT_FOUND_ERR: An attempt is made to reference a node in a context where it does not exist." />
      <item value="template might not exist or might not be accessible by any of the configured Template Resolvers" />
      <item value="token Services Override" />
      <item value="Integrate" />
      <item value="get User Info From User Center" />
      <item value="RL" />
      <item value="Highlighted commands can be interpreted and executed by the IDE in a smart way.&#10;&#9;&#9;Press Ctrl+Enter to try this, or Enter to run the command in the console as usual.&#10;&#9;&#9;You can turn this behavior on/off in Preferences | Tools | Terminal. Got it!" />
      <item value="convert" />
      <item value="conver" />
      <item value="Convert" />
      <item value="Pojo Convert Utils" />
      <item value="rpc" />
      <item value="service" />
      <item value="outward" />
      <item value="External" />
      <item value="外部服务" />
      <item value="第三方服务" />
      <item value="module" />
      <item value="lookup" />
      <item value="lookup parent from repository" />
      <item value="Base Demo project for Spring Boot" />
      <item value="数据字典" />
      <item value="Dict" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="72" />
        <entry key="ENGLISH" value="72" />
        <entry key="ROMANIAN" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SLOVENIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="keepFormat" value="true" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
  </component>
</application>